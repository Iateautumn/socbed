#!/usr/bin/env bash

NUM_ITERATIONS=10

epoch () { date "+%s"; }
isotime () { date -u -d @$1 "+%Y-%m-%dT%H:%M:%SZ"; }
#isotime () { date -ur $1 "+%Y-%m-%dT%H:%M:%SZ"; } # variant for macOS
isonow () { date -u "+%Y-%m-%dT%H:%M:%SZ"; }

for i in `seq 1 $NUM_ITERATIONS`; do
	start=$(epoch)
	end=$(( $start + 3600 ))

	echo "$(isotime $start) Starting session $i..."
	vmconsole -c start_session 2> "vmconsole_$i.log"

	echo "$(isonow) Sleep for 180 seconds to ensure the Log Server is up and running..."
	sleep $(( $start + 180 - $(epoch) ))

	echo "$(isonow) Delete all logs in Log Server..."
	./download_logs.py delete

	echo "$(isonow) Waiting until 15 minutes passed..."
	sleep $(( $start + 900 - $(epoch) ))

	echo "$(isonow) Running multi-step attack (pausing 3 minutes between steps)..."
	step=1
	for attack in infect_email_exe c2_download_files c2_network_info c2_host_scan c2_get_creds c2_lateral_movement c2_lateral_gather; do
		echo "$(isonow) running attack: $attack"
		echo -e "use $attack\nrun\nback" | attackconsole -l "attackconsole_$i.log" >> "attackconsole_$i.stdout"
		echo "$(isonow) sleep duration: $(( $start + 900 + 180*$step - $(epoch) )) seconds"
		sleep $(( $start + 900 + 180*$step - $(epoch) ))
		step=$(( $step + 1 ))
	done

	echo "$(isonow) Waiting until 65 minutes passed..."
	sleep $(( $start + 3600 + 300 - $(epoch) ))

	echo "$(isonow) Downloading logs..."
	./download_logs.py download --start $(isotime $start) --end $(isotime $end) --suffix $i

	echo "$(isonow) Closing session..."
	vmconsole -c close_session 2>> "vmconsole_$i.log"

	echo "$(isonow) Done."
done
